{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\19207\\\\OneDrive\\\\Desktop\\\\VSCode\\\\spotify-clone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport Player from './Player';\nimport { useDataLayerValue } from \"./DataLayer\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [{\n    user,\n    token\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user\n        });\n      });\n    }\n\n    console.log(\"I HAVA A TOKEN > \", token);\n  }, []);\n  console.log(\"User\", user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WaEVPrhstsCUlna9FyHo/78Ugc4=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/19207/OneDrive/Desktop/VSCode/spotify-clone/src/App.js"],"names":["React","useEffect","useState","getTokenFromResponse","SpotifyWebApi","Login","Player","useDataLayerValue","spotify","App","user","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,oBAAT,QAAqC,WAArC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,iBAAT,QAAkC,aAAlC;AAEA,MAAMC,OAAO,GAAG,IAAIJ,aAAJ,EAAhB;;AAEA,SAASK,GAAT,GAAe;AAAA;;AACb,QAAM,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD,EAAgBC,QAAhB,IAA4BL,iBAAiB,EAAnD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,IAAI,GAAGV,oBAAoB,EAAjC;AACAW,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAGD,MAAH,EAAW;AAETJ,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,WADC;AAEPP,QAAAA,KAAK,EAAEK;AAFA,OAAD,CAAR;AAIAR,MAAAA,OAAO,CAACW,cAAR,CAAuBH,MAAvB;AAEAR,MAAAA,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAqBX,IAAI,IAAI;AAE3BE,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,UADC;AAEPR,UAAAA,IAAI,EAAEA;AAFC,SAAD,CAAR;AAID,OAND;AAOD;;AAEDY,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCZ,KAAjC;AACD,GAvBQ,EAuBN,EAvBM,CAAT;AAyBAW,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBb,IAApB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAEIC,KAAK,gBACH,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AALN;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAzCQF,G;UAC2BF,iB;;;KAD3BE,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport Player from './Player';\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{user, token}, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if(_token) {\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      })\n      spotify.setAccessToken(_token);\n\n      spotify.getMe().then(user => {\n\n        dispatch({\n          type: \"SET_USER\",\n          user: user\n        })\n      })\n    }\n\n    console.log(\"I HAVA A TOKEN > \", token);\n  }, []);\n\n  console.log(\"User\", user);\n\n  return (\n    <div className=\"app\">\n      {\n        token ? (\n          <Player/>\n        ) : (\n          <Login/>\n        )\n      }\n    </div> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}