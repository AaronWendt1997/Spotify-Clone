{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\19207\\\\OneDrive\\\\Desktop\\\\VSCode\\\\spotify-clone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport Player from './Player';\nimport { useDataLayerValue } from \"./DataLayer\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [{\n    token\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      spotify.setAccessToken(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      spotify.getPlaylist('37i9dQZEVXcU5UcwgMkFeE').then(response => dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response\n      }));\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify\n      });\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists\n        });\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VvoLkVsyndhTBJCVSbrCRx/YQrA=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/19207/OneDrive/Desktop/VSCode/spotify-clone/src/App.js"],"names":["React","useEffect","getTokenFromResponse","SpotifyWebApi","Login","Player","useDataLayerValue","spotify","App","token","dispatch","hash","window","location","_token","access_token","setAccessToken","type","getPlaylist","then","response","discover_weekly","getMe","user","getUserPlaylists","playlists"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,oBAAT,QAAqC,WAArC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,iBAAT,QAAkC,aAAlC;AAEA,MAAMC,OAAO,GAAG,IAAIJ,aAAJ,EAAhB;;AAEA,SAASK,GAAT,GAAe;AAAA;;AACb,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAYC,QAAZ,IAAwBJ,iBAAiB,EAA/C;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,IAAI,GAAGT,oBAAoB,EAAjC;AACAU,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAGD,MAAH,EAAW;AAETP,MAAAA,OAAO,CAACS,cAAR,CAAuBF,MAAvB;AAEAJ,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,WADC;AAEPR,QAAAA,KAAK,EAAEK;AAFA,OAAD,CAAR;AAKAP,MAAAA,OAAO,CAACW,WAAR,CAAoB,wBAApB,EAA8CC,IAA9C,CAAmDC,QAAQ,IACzDV,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,qBADC;AAEPI,QAAAA,eAAe,EAAED;AAFV,OAAD,CADV;AAMAV,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,aADC;AAEPV,QAAAA,OAAO,EAAEA;AAFF,OAAD,CAAR;AAKAA,MAAAA,OAAO,CAACe,KAAR,GAAgBH,IAAhB,CAAqBI,IAAI,IAAI;AAC3Bb,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAE,UADC;AAEPM,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAOAhB,MAAAA,OAAO,CAACiB,gBAAR,GAA2BL,IAA3B,CAAiCM,SAAD,IAAe;AAC7Cf,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAE,eADC;AAEPQ,UAAAA,SAAS,EAAEA;AAFJ,SAAD,CAAR;AAID,OALD;AAMD;AACF,GAvCQ,CAAT;AAyCA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAEIhB,KAAK,gBACH,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF;AAAjB;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AALN;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAvDQC,G;UACuBF,iB;;;KADvBE,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport Player from './Player';\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if(_token) {\n      \n      spotify.setAccessToken(_token);\n      \n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      })\n\n      spotify.getPlaylist('37i9dQZEVXcU5UcwgMkFeE').then(response => \n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response\n      }));\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify\n      })\n\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists\n        })\n      })\n    }\n  });\n\n  return (\n    <div className=\"app\">\n      {\n        token ? (\n          <Player spotify={spotify}/>\n        ) : (\n          <Login/>\n        )\n      }\n    </div> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}