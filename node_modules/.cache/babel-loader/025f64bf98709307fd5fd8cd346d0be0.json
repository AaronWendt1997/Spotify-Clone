{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/19207/OneDrive/Desktop/VSCode/spotify-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import{getTokenFromResponse}from\"./spotify\";import SpotifyWebApi from\"spotify-web-api-js\";import\"./App.css\";import Login from\"./Login\";import Player from'./Player';import{useDataLayerValue}from\"./DataLayer\";var spotify=new SpotifyWebApi();function App(){var _useDataLayerValue=useDataLayerValue(),_useDataLayerValue2=_slicedToArray(_useDataLayerValue,2),token=_useDataLayerValue2[0].token,dispatch=_useDataLayerValue2[1];useEffect(function(){var hash=getTokenFromResponse();window.location.hash=\"\";var _token=hash.access_token;if(_token){spotify.setAccessToken(_token);dispatch({type:\"SET_TOKEN\",token:_token});spotify.getPlaylist('37i9dQZEVXcU5UcwgMkFeE').then(function(response){return dispatch({type:\"SET_DISCOVER_WEEKLY\",discover_weekly:response});});dispatch({type:\"SET_SPOTIFY\",spotify:spotify});spotify.getMe().then(function(user){dispatch({type:\"SET_USER\",user:user});});spotify.getUserPlaylists().then(function(playlists){dispatch({type:\"SET_PLAYLISTS\",playlists:playlists});});}},[token,dispatch]);return/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:token?/*#__PURE__*/_jsx(Player,{spotify:spotify}):/*#__PURE__*/_jsx(Login,{})});}export default App;","map":{"version":3,"sources":["C:/Users/19207/OneDrive/Desktop/VSCode/spotify-clone/src/App.js"],"names":["React","useEffect","getTokenFromResponse","SpotifyWebApi","Login","Player","useDataLayerValue","spotify","App","token","dispatch","hash","window","location","_token","access_token","setAccessToken","type","getPlaylist","then","response","discover_weekly","getMe","user","getUserPlaylists","playlists"],"mappings":"sNAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,oBAAT,KAAqC,WAArC,CACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,iBAAT,KAAkC,aAAlC,CAEA,GAAMC,CAAAA,OAAO,CAAG,GAAIJ,CAAAA,aAAJ,EAAhB,CAEA,QAASK,CAAAA,GAAT,EAAe,wBACiBF,iBAAiB,EADlC,0DACJG,KADI,wBACJA,KADI,CACKC,QADL,wBAGbT,SAAS,CAAC,UAAM,CACd,GAAMU,CAAAA,IAAI,CAAGT,oBAAoB,EAAjC,CACAU,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CAAuB,EAAvB,CACA,GAAMG,CAAAA,MAAM,CAAGH,IAAI,CAACI,YAApB,CAEA,GAAGD,MAAH,CAAW,CAETP,OAAO,CAACS,cAAR,CAAuBF,MAAvB,EAEAJ,QAAQ,CAAC,CACPO,IAAI,CAAE,WADC,CAEPR,KAAK,CAAEK,MAFA,CAAD,CAAR,CAKAP,OAAO,CAACW,WAAR,CAAoB,wBAApB,EAA8CC,IAA9C,CAAmD,SAAAC,QAAQ,QACzDV,CAAAA,QAAQ,CAAC,CACPO,IAAI,CAAE,qBADC,CAEPI,eAAe,CAAED,QAFV,CAAD,CADiD,EAA3D,EAMAV,QAAQ,CAAC,CACPO,IAAI,CAAE,aADC,CAEPV,OAAO,CAAEA,OAFF,CAAD,CAAR,CAKAA,OAAO,CAACe,KAAR,GAAgBH,IAAhB,CAAqB,SAAAI,IAAI,CAAI,CAC3Bb,QAAQ,CAAC,CACPO,IAAI,CAAE,UADC,CAEPM,IAAI,CAAJA,IAFO,CAAD,CAAR,CAID,CALD,EAOAhB,OAAO,CAACiB,gBAAR,GAA2BL,IAA3B,CAAgC,SAACM,SAAD,CAAe,CAC7Cf,QAAQ,CAAC,CACPO,IAAI,CAAE,eADC,CAEPQ,SAAS,CAAEA,SAFJ,CAAD,CAAR,CAID,CALD,EAMD,CACF,CAvCQ,CAuCN,CAAChB,KAAD,CAAQC,QAAR,CAvCM,CAAT,CAyCA,mBACE,YAAK,SAAS,CAAC,KAAf,UAEID,KAAK,cACH,KAAC,MAAD,EAAQ,OAAO,CAAEF,OAAjB,EADG,cAGH,KAAC,KAAD,IALN,EADF,CAWD,CAED,cAAeC,CAAAA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport Player from './Player';\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if(_token) {\n      \n      spotify.setAccessToken(_token);\n      \n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      })\n\n      spotify.getPlaylist('37i9dQZEVXcU5UcwgMkFeE').then(response => \n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response\n      }));\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify\n      })\n\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists\n        })\n      })\n    }\n  }, [token, dispatch]);\n\n  return (\n    <div className=\"app\">\n      {\n        token ? (\n          <Player spotify={spotify}/>\n        ) : (\n          <Login/>\n        )\n      }\n    </div> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}